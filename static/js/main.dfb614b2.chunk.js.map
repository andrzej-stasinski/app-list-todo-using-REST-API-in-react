{"version":3,"sources":["components/ToDoItem/ToDoItem.css.js","components/ToDoItem/ToDoItem.js","components/FormToDo/FormToDo.css.js","components/FormToDo/FormToDo.js","container/ToDoList.css.js","helpers/api.js","container/ToDoList.js","components/FormEdit/FormEdit.css.js","components/FormEdit/FormEdit.js","components/NotFound.js","App.css.js","App.js","index.js"],"names":["Item","styled","div","props","done","LinkStyled","Link","ToDoItem","state","deleteTask","onDeleteTask","id","toggleDone","onToggleDone","this","onClick","text","date","style","padding","to","Component","defaultProps","Form","form","Button","button","Input","input","FormToDo","onHandleInput","onAddTask","taskValue","chars","onSubmit","type","value","onChange","className","placeholder","color","position","fontSize","left","bottom","Title","h2","Tasks","ErrorDiv","URL","process","REST_API_URL","get","url","Promise","resolve","reject","fetch","then","res","json","data","apiCall","method","body","headers","JSON","stringify","ok","getAll","getOne","create","params","destroy","update","ToDoList","tasks","task","getData","a","toDoItemApi","setState","refError","createRef","handleInput","e","target","length","current","textContent","addTask","preventDefault","Date","toLocaleString","findById","arr","index","findIndex","el","newTask","filter","ind","console","log","map","key","onGetData","ref","marginTop","FormEdit","taskItem","fetched","errors","getId","match","componentDidMount","InputEdit","CheckboxEdit","checked","SubmitData","textValue","history","push","catch","err","marginLeft","NotFound","counter","interval","countDown","intervalId","setInterval","clearInterval","location","pathname","Container","App","exact","path","component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"o6BAGO,IAAMA,EAAOC,IAAOC,IAAV,KAUJ,SAAAC,GAAK,OAAIA,EAAMC,KAAO,UAAY,UACxB,SAAAD,GAAK,OAAIA,EAAMC,KAAO,eAAiB,SAE1B,KAIvBC,EAAaJ,YAAOK,IAAPL,CAAH,KCjBjBM,E,4MAMFC,MAAQ,CACJJ,KAAM,EAAKD,MAAMC,M,EAGrBK,WAAa,kBAAM,EAAKN,MAAMO,aAAa,EAAKP,MAAMQ,K,EACtDC,WAAa,kBAAM,EAAKT,MAAMU,aAAa,EAAKV,MAAMQ,K,uDAE7C,MAEcG,KAAKX,MAAjBQ,EAFF,EAEEA,GAAIP,EAFN,EAEMA,KACX,OACI,6BACI,kBAACJ,EAAD,CACII,KAAMA,EACNW,QAASD,KAAKF,YAEd,6BAAME,KAAKX,MAAMa,MACjB,6BAAMF,KAAKX,MAAMc,OAErB,4BAAQF,QAASD,KAAKL,WAAYS,MAAO,CAACC,QAAS,WAAnD,OACA,kBAACd,EAAD,CAAYe,GAAE,eAAUT,IAAxB,a,GA1BOU,aAAjBd,EAEKe,aAAe,CAClBlB,MAAM,GA4BCG,Q,67BChCR,IAAMgB,EAAOtB,IAAOuB,KAAV,KAKJC,EAASxB,IAAOyB,OAAV,IAiBiB,KAMvBC,EAAQ1B,IAAO2B,MAAV,IAMkB,KCPrBC,EA1BE,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,MACpD,OACI,kBAACV,EAAD,CAAMW,SAAUH,GACZ,kBAACJ,EAAD,CACIQ,KAAK,OACLC,MAAOJ,EACPK,SAAUP,EACVQ,UAAU,QACVC,YAAY,iBAEhB,kBAACd,EAAD,CACIU,KAAK,UADT,OAKA,yBACIjB,MAAO,CACHsB,MAAO,OACPC,SAAU,WACVC,SAAU,GACVC,KAAM,IAAKC,OAAQ,IAEzBX,K,mVCvBP,IAAMY,EAAQ5C,IAAO6C,GAAV,KAGLC,EAAQ9C,IAAOC,IAAV,KAIL8C,EAAW/C,IAAOC,IAAV,KCTf+C,EAAMC,yCAECC,EAAe,SAAAxC,GAAE,OAC1BA,EAAE,UAAMsC,EAAN,YAAatC,GAAb,UAAuBsC,IAEhBG,EAAM,SAAAC,GAAG,OAClB,IAAIC,SAAQ,SAACC,EAASC,GAClBC,MAAMJ,GACLK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAQM,UAGjBC,EAAU,SAACT,EAAKU,EAAQC,EAAMT,EAASC,GAA7B,OACnBC,MAAMJ,EAAK,CACPU,OAAQA,EACRE,QAAS,CACP,eAAgB,oBAElBD,KAAME,KAAKC,UAAUH,KACtBN,MAAK,SAAAC,GACDA,EAAIS,GACHT,EAAIC,OAAOF,MAAK,SAAAG,GAAI,OAAIN,EAAQM,MAEhCL,EAAOG,OAQNU,EAAS,kBAClBjB,EAAID,MAEKmB,EAAS,SAAA3D,GAAE,OACpByC,EAAID,EAAaxC,KAER4D,EAAS,SAAAC,GAAM,OAXPnB,EAYZF,IAZiBa,EAYlB,eAAqBQ,GAXzB,IAAIlB,SACA,SAACC,EAASC,GAAV,OAAqBM,EAAQT,EAAK,OAAQW,EAAMT,EAASC,MAF7C,IAACH,EAAKW,GAgCbS,EAAU,SAAA9D,GAAE,OAlBA0C,EAmBXF,EAAaxC,GAlBvB,IAAI2C,SACA,SAACC,EAASC,GACNC,MAAMJ,EAAK,CACPU,OAAQ,SACRE,QAAS,CACP,eAAgB,sBAEnBP,MAAK,SAAAC,GACDA,EAAIS,GACHb,EAAQI,GAERH,EAAOG,SAZF,IAAAN,GAwBZqB,EAAS,SAAC/D,EAAI6D,GAAL,OAHFnB,EAIZF,EAAaxC,GAJIqD,EAIlB,eAAuBQ,GAH1B,IAAIlB,SAAQ,SAACC,EAASC,GAAV,OAAqBM,EAAQT,EAAK,MAAOW,EAAMT,EAASC,MADrD,IAACH,EAAKW,GCmEVW,E,4MAxHXnE,MAAQ,CACNoE,MAAO,GACPC,KAAM,GACN5C,MAAO,I,EAGT6C,Q,sBAAU,4BAAAC,EAAA,sEACWC,IADX,OACFnB,EADE,OAER,EAAKoB,SAAS,CAAEL,MAAOf,IAFf,2C,EASVqB,SAAWC,sB,EAEXC,YAAc,SAACC,GACb,EAAKJ,SAAS,CAAEhD,MAAOoD,EAAEC,OAAOlD,MAAMmD,SACtC,EAAKL,SAASM,QAAQC,YAAc,GACP,KAA1BJ,EAAEC,OAAOlD,MAAMmD,OAIlB,EAAKN,SAAS,CAAEJ,KAAMQ,EAAEC,OAAOlD,QAH7B,EAAK8C,SAASM,QAAQC,YAAc,oB,EAMxCC,Q,uCAAU,WAAOL,GAAP,eAAAN,EAAA,yDACRM,EAAEM,iBAE4B,IAA3B,EAAKnF,MAAMqE,KAAKU,OAHX,uBAIN,EAAKL,SAASM,QAAQC,YAAc,sBAJ9B,0BAON,EAAKP,SAASM,QAAQC,YAAc,GAP9B,uBAUWT,EAAmB,CACpChE,KAAM,EAAKR,MAAMqE,KACjB5D,MAAM,IAAI2E,MAAOC,iBACjBzF,MAAM,IAbA,OAUFyE,EAVE,OAeR,EAAKI,SAAS,CACZL,MAAM,GAAD,mBAAM,EAAKpE,MAAMoE,OAAjB,CAAwBC,IAC7BA,KAAM,GACN5C,MAAO,KAlBD,4C,wDAsBV6D,SAAW,SAACnF,EAAIoF,GACd,IAAMC,EAAQD,EAAIE,WAAU,SAAAC,GAAE,OAAIA,EAAGvF,KAAOA,KAC5C,MAAO,CAACqF,QAAOnB,KAAMkB,EAAIC,K,EAG3BvF,W,uCAAa,WAAOE,GAAP,qBAAAoE,EAAA,6DACJH,EAAS,EAAKpE,MAAdoE,MADI,SAELI,EAAoBrE,GAFf,SAGK,EAAKmF,SAASnF,EAAIiE,GAA3BoB,EAHI,EAGJA,MACDG,EAAUvB,EAAMwB,QAAO,SAACF,EAAIG,GAAL,OAAaA,IAAQL,KAClD,EAAKf,SAAS,CAAEL,MAAOuB,IALZ,2C,wDAQbvF,W,uCAAa,WAAOD,GAAP,2BAAAoE,EAAA,6DACXuB,QAAQC,IAAI,gBACL3B,EAAS,EAAKpE,MAAdoE,MAFI,EAGW,EAAKkB,SAASnF,EAAIiE,GAAjCoB,EAHI,EAGJA,MAAOnB,EAHH,EAGGA,KACP5D,EAAc4D,EAAd5D,KAAMD,EAAQ6D,EAAR7D,KAJF,SAKOgE,EAAmBrE,EAAI,CACvCP,MAAOyE,EAAKzE,KAAMY,KAAMA,EAAMC,SANrB,cASLkF,EAAUvB,EAAM4B,KAAI,SAAC3B,EAAMwB,GAC/B,OAAGA,IAAQL,EACF,2BAAInB,GAAX,IAAiBzE,MAAOyE,EAAKzE,OAExByE,KAET,EAAKI,SAAS,CAAEL,MAAOuB,IAfZ,2C,wHAlDXrF,KAAKgE,Y,+BAoEG,IAAD,OAEP,OACE,6BACE,kBAACjC,EAAD,kBAEE,kBAACE,EAAD,KAEIjC,KAAKN,MAAMoE,MAAM4B,KAAI,SAAA3B,GAAI,OACrB,kBAAC,EAAD,CACE4B,IAAK5B,EAAKlE,GACVA,GAAIkE,EAAKlE,GACTK,KAAM6D,EAAK7D,KACXZ,KAAMyE,EAAKzE,KACXa,KAAM4D,EAAK5D,KACXyF,UAAW,EAAK5B,QAChBpE,aAAc,EAAKD,WACnBI,aAAc,EAAKD,iBAM7B,kBAACoC,EAAD,CACE2D,IAAK7F,KAAKoE,SACVhE,MAAO,CAAC0F,UAAW,UAGrB,kBAAC,EAAD,CACE9E,cAAehB,KAAKsE,YACpBpD,UAAWlB,KAAKN,MAAMqE,KACtB9C,UAAWjB,KAAK4E,QAChBzD,MAAOnB,KAAKN,MAAMyB,a,GAlHTZ,a,uRCHhB,IAAMhB,EAAaJ,YAAOK,IAAPL,CAAH,KCyGR4G,E,4MArGXrG,MAAQ,CACJsG,SAAU,KACVC,SAAS,EACTC,OAAQ,I,EAGZC,MAAQ,kBAAM,EAAK9G,MAAM+G,MAAM1C,OAAO7D,I,EAEtCwG,kB,sBAAoB,8BAAApC,EAAA,6DACVpE,EAAK,EAAKsG,QADA,SAEG3C,EAAO3D,GAFV,OAEVkE,EAFU,OAGhB,EAAKI,SAAS,CAAE6B,SAAUjC,EAAMkC,SAAS,IAHzB,2C,EAMpBK,UAAY,SAAC/B,GACT,EAAKJ,SAAS,CAAE6B,SAAS,2BAClB,EAAKtG,MAAMsG,UADM,IAEpB9F,KAAMqE,EAAEC,OAAOlD,MACfnB,MAAM,IAAI2E,MAAOC,mBAEjBmB,OAAQ,M,EAGhBK,aAAe,SAAChC,GACZiB,QAAQC,IAAIlB,EAAEC,OAAOgC,SACrB,EAAKrC,SAAS,CAAE6B,SAAS,2BAClB,EAAKtG,MAAMsG,UADM,IAEpB1G,KAAMiF,EAAEC,OAAOgC,UAEfN,OAAQ,M,EAIhBO,W,uCAAa,WAAMlC,GAAN,eAAAN,EAAA,yDACTM,EAAEM,iBAEI6B,EAAY,EAAKhH,MAAMsG,SAAS9F,KAH7B,uBAKL,EAAKiE,SAAS,CAAE+B,OAAQ,aALnB,+BAOCQ,EAAUjC,QAAU,GAPrB,wBAQL,EAAKN,SAAS,CAAE+B,OAAQ,2BARnB,2BAYI,EAAKxG,MAAMsG,SACZpC,EACR,EAAKuC,QADS,eAEV,EAAKzG,MAAMsG,WAGlBpD,MAAK,WACF,EAAKvD,MAAMsH,QAAQC,KAAK,QAE3BC,OAAM,SAAAC,GAAG,OAAItB,QAAQC,IAAI,cAAeqB,MArBhC,4C,6GAyBE9G,KAAKmG,QAChB,OACI,6BACI,wCAGAnG,KAAKN,MAAMuG,QACT,6BACE,mDACA,yBAAK7F,MAAO,CAACsB,MAAO,QAEf1B,KAAKN,MAAMwG,QAEhB,kBAACzF,EAAD,CAAMW,SAAUpB,KAAKyG,YACjB,kBAAC5F,EAAD,CACIQ,KAAK,OACLC,MAAOtB,KAAKN,MAAMsG,SAAS9F,KAC3BqB,SAAUvB,KAAKsG,UACf7E,YAAY,cAEhB,2BAAOrB,MAAO,CAAC2G,WAAY,KAA3B,OAEI,2BACI1F,KAAK,WACLmF,QAASxG,KAAKN,MAAMsG,SAAS1G,KAC7BiC,SAAUvB,KAAKuG,aACfnG,MAAO,CAAC2G,WAAY,EAAGjB,UAAW,OAI1C,kBAACnF,EAAD,eAGN,6BACE,2CAGJ,6BACA,kBAAC,EAAD,CAAYL,GAAG,KAAf,kB,GAlGOC,aCHFyG,E,4MACjBtH,MAAQ,CACJuH,QAAS,GACTC,SAAU,M,EAEdC,UAAY,WACR3B,QAAQC,IAAI,EAAK/F,MAAMuH,SACvB,EAAK9C,SAAS,CAAE8C,QAAS,EAAKvH,MAAMuH,QAAU,K,kEAG9C,IAAMG,EAAaC,YAAYrH,KAAKmH,UAAW,KAC/CnH,KAAKmE,SAAS,CAAE+C,SAAUE,M,6CAI1BE,cAActH,KAAKN,MAAMwH,Y,+BAIzB,OACI,6BACI,gDACA,uDAA6BlH,KAAKX,MAAMkI,SAASC,SAAjD,KACA,yDAA+BxH,KAAKN,MAAMuH,QAA1C,YACCjH,KAAKN,MAAMuH,QAAU,GAAK,kBAAC,IAAD,CAAU3G,GAAG,W,GAxBlBC,a,kTCA/B,IAAMkH,GAAYtI,IAAOC,IAAV,KC6BPsI,GAxBH,WAER,OADAlC,QAAQC,IAAIrD,0CAGR,kBAAC,IAAD,KACE,kBAACqF,GAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,0CAA0CC,UAAWhE,IAKvE,kBAAC,IAAD,CAAO+D,KAAK,kDAAkDC,UAAW9B,IAGzE,kBAAC,IAAD,CAAO8B,UAAWb,QClB1Bc,I,MAAcC,SAASC,eAAe,SAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFL,M","file":"static/js/main.dfb614b2.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nexport const Item = styled.div`\n    cursor: pointer;\n    padding: 5px;\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\n\n    font-weight: 500;\n\n    display: flex;\n    justify-content: space-between;\n\n    color: ${props => props.done ? '#c0392b' : 'auto'};\n    text-decoration: ${props => props.done ? 'line-through' : 'auto'};\n\n    @media screen and (max-width: ${400}px) {\n        flex-direction: column;\n    }\n`\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n    color: black;\n    border: 1px solid grey;\n    margin-left: 10px;\n    padding: 0 10px;\n    transition: 0.5s linear color;\n    &:hover {\n        color: red;\n    }\n`","import React, { Component } from 'react'\nimport {Item, LinkStyled} from './ToDoItem.css'\n\nclass ToDoItem extends Component {\n\n    static defaultProps = {\n        done: false,\n    }\n\n    state = {\n        done: this.props.done,\n    }\n\n    deleteTask = () => this.props.onDeleteTask(this.props.id)\n    toggleDone = () => this.props.onToggleDone(this.props.id)\n\n    render() {\n        // console.log(this.props)\n        const {id, done} = this.props\n        return (\n            <div>\n                <Item \n                    done={done}\n                    onClick={this.toggleDone}\n                >\n                    <div>{this.props.text}</div>\n                    <div>{this.props.date}</div>\n                </Item> \n                <button onClick={this.deleteTask} style={{padding: '0 10px'}}>DEL</button> \n                <LinkStyled to={`edit/${id}`}>Edit</LinkStyled>     \n            </div>\n        )\n    }\n}\nexport default ToDoItem\n\n\n","import styled from 'styled-components'\n\nexport const Form = styled.form`\n    margin-top: 5px;\n    position: relative;\n`\n\nexport const Button = styled.button`\n    padding: 5px;\n    font-size: 18px;\n    margin-left: 5px;\n    min-width: 120px;\n    border-radius: 5px;\n    outline: none;\n    border: 1px solid grey;\n    color: yellow;\n    background-color: #666;\n    cursor:pointer;\n    transition: 0.5s linear;\n    transition-property: color, background-color; \n    &:hover {\n        color: white;\n        background-color: #333;\n    }\n    @media screen and (max-width: ${400}px) {\n        margin: 5px 0 0 0;\n        width: 100%;\n    }\n`\n\nexport const Input = styled.input`\n    padding: 5px 20px 5px 5px;\n    font-size: 18px;\n    border-radius: 5px;\n    outline: none;\n    border: 1px solid grey;\n    @media screen and (max-width: ${400}px) {\n        width: 100%;\n    }    \n`\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport {Form, Input, Button} from './FormToDo.css'\n\nconst FormToDo = ({onHandleInput, onAddTask, taskValue, chars}) => {\n    return (\n        <Form onSubmit={onAddTask}>\n            <Input \n                type='text' \n                value={taskValue} \n                onChange={onHandleInput} \n                className='input'\n                placeholder='type task...'\n            /> \n            <Button \n                type='submit' \n            >\n                Add\n            </Button> \n            <div\n                style={{\n                    color: '#888',\n                    position: 'absolute',\n                    fontSize: 14,\n                    left: 230, bottom: 8\n                }}\n            >{chars}</div>                \n        </Form>\n    )\n}\nexport default FormToDo","import styled from 'styled-components'\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n`\nexport const Tasks = styled.div`\n  border: 1px dotted grey;\n  max-width: 500px;\n`\nexport const ErrorDiv = styled.div`\n  font-weight: 400;\n  color: red;\n  height: 20px;\n`","const URL = process.env.REACT_APP_REST_API\n\nexport const REST_API_URL = id =>\n    id ? `${URL}/${id}` : `${URL}`\n\nexport const get = url => \n    new Promise((resolve, reject) => {\n        fetch(url)\n        .then(res => res.json())\n        .then(data => resolve(data))\n    })\n\nexport const apiCall = (url, method, body, resolve, reject) => \n    fetch(url, {\n        method: method,\n        headers: {\n          'Content-type': 'application/json',\n        },         \n        body: JSON.stringify(body)\n    }).then(res => {\n        if(res.ok) {\n            res.json().then(data => resolve(data))\n        } else {\n            reject(res)\n        }\n    }) \nexport const post = (url, body) => \n    new Promise(\n        (resolve, reject) => apiCall(url, 'POST', body, resolve, reject)\n    )\n\nexport const getAll = () =>\n    get(REST_API_URL())\n\nexport const getOne = id => \n    get(REST_API_URL(id))\n\nexport const create = params => \n    post(REST_API_URL(), {...params})\n\nexport const destroyed = url => \n    new Promise(\n        (resolve, reject) => {\n            fetch(url, {\n                method: 'DELETE',\n                headers: {\n                  'Content-type': 'application/json',\n                },\n            }).then(res => {\n                if(res.ok) {\n                    resolve(res)\n                } else {\n                    reject(res)\n                }\n            })    \n        }\n    )\n\nexport const destroy = id => \n    destroyed(REST_API_URL(id))\n\nexport const put = (url, body) => \n    new Promise((resolve, reject) => apiCall(url, 'PUT', body, resolve, reject))\n\nexport const update = (id, params) => \n    put(REST_API_URL(id), {...params})\n\n\n","import React, { Component, createRef } from 'react';\nimport ToDoItem from '../components/ToDoItem/ToDoItem'\nimport FormToDo from '../components/FormToDo/FormToDo'\nimport {Title, Tasks, ErrorDiv} from './ToDoList.css'\nimport * as toDoItemApi from '../helpers/api'\n\nclass ToDoList extends Component {\n\n    state = {\n      tasks: [],\n      task: '',\n      chars: ''\n    }\n\n    getData = async () => {   \n      const data = await toDoItemApi.getAll()\n      this.setState({ tasks: data });\n    }\n\n    componentDidMount() {\n      this.getData()\n    }\n  \n    refError = createRef()\n\n    handleInput = (e) => {\n      this.setState({ chars: e.target.value.length });\n      this.refError.current.textContent = ''\n      if(e.target.value.length === 25) {\n        this.refError.current.textContent = 'Max 25 znaków'\n        return\n      }\n      this.setState({ task: e.target.value, });\n    }\n\n    addTask = async (e) => {\n      e.preventDefault()\n\n      if(this.state.task.length === 0) {\n        this.refError.current.textContent = '*** Input empty ***'\n        return\n      } else {\n        this.refError.current.textContent = ''\n      } \n     \n      const task = await toDoItemApi.create({\n        text: this.state.task,\n        date: new Date().toLocaleString(),\n        done: false,\n      })\n      this.setState({ \n        tasks: [...this.state.tasks, task],\n        task: '',\n        chars: '',\n      });\n    }\n\n    findById = (id, arr) => {\n      const index = arr.findIndex(el => el.id === id)\n      return {index, task: arr[index]}\n    }\n    \n    deleteTask = async (id) => {\n      const {tasks} = this.state\n      await toDoItemApi.destroy(id)\n      const {index} = this.findById(id, tasks)\n      const newTask = tasks.filter((el, ind) => ind !== index)\n      this.setState({ tasks: newTask });\n    }  \n    \n    toggleDone = async (id) => {\n      console.log('onToggleDone')\n      const {tasks} = this.state\n      const {index, task} = this.findById(id, tasks)\n      const {date, text} = task\n      const res = await toDoItemApi.update(id, {\n        done: !task.done, text: text, date,\n      })\n\n      const newTask = tasks.map((task, ind) => {\n        if(ind === index) {\n          return {...task, done: !task.done}\n        }\n        return task\n      })\n      this.setState({ tasks: newTask });    \n    }\n  \n    render() {\n      // console.log(this.props)\n      return (\n        <div>\n          <Title>ToDo List</Title> \n          {/* <div>ToDo List</div>  */}\n            <Tasks>\n            {\n                this.state.tasks.map(task => (\n                    <ToDoItem \n                      key={task.id} \n                      id={task.id}\n                      text={task.text} \n                      done={task.done}\n                      date={task.date}\n                      onGetData={this.getData}\n                      onDeleteTask={this.deleteTask}\n                      onToggleDone={this.toggleDone}\n                    />\n                ))\n            }            \n            </Tasks>\n\n            <ErrorDiv \n              ref={this.refError} \n              style={{marginTop: '10px'}}\n            ></ErrorDiv>\n\n            <FormToDo \n              onHandleInput={this.handleInput}\n              taskValue={this.state.task}\n              onAddTask={this.addTask}\n              chars={this.state.chars}\n            />\n     \n        </div>\n      )\n    }\n}\n\nexport default ToDoList","import styled from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n    color: black;\n    border: 1px solid grey;\n    margin-left: 10px;\n    padding: 0 10px;\n    transition: 0.5s linear color;\n    &:hover {\n        color: red;\n    }\n`\n","import React, { Component } from 'react'\nimport {LinkStyled} from './FormEdit.css'\nimport {getOne, REST_API_URL, update} from '../../helpers/api'\nimport {Form, Input, Button} from '../FormToDo/FormToDo.css'\n\nclass FormEdit extends Component {\n\n    state = {\n        taskItem: null,\n        fetched: false,\n        errors: '',\n    }\n\n    getId = () => this.props.match.params.id\n\n    componentDidMount = async () =>  {\n        const id = this.getId()\n        const task = await getOne(id)\n        this.setState({ taskItem: task, fetched: true });\n    }\n\n    InputEdit = (e) => {\n        this.setState({ taskItem: {\n            ...this.state.taskItem, \n            text: e.target.value,\n            date: new Date().toLocaleString(),\n            },\n            errors: '' \n        });\n    }\n    CheckboxEdit = (e) => {\n        console.log(e.target.checked)\n        this.setState({ taskItem: {\n            ...this.state.taskItem, \n            done: e.target.checked,\n            },\n            errors: '' \n        });\n    }\n\n    SubmitData = async(e) => {\n        e.preventDefault()\n\n        const textValue = this.state.taskItem.text\n        if(!textValue) {\n            this.setState({ errors: 'Required' });\n            return\n        } else if(textValue.length <= 3) {\n            this.setState({ errors: 'Too short, min 3 chars' });\n            return            \n        }\n\n        const task = this.state.taskItem\n        const res = update(\n            this.getId(), \n            {...this.state.taskItem}\n        )\n        res\n        .then(() => {\n            this.props.history.push('/')\n        })\n        .catch(err => console.log('PUT failure', err))\n    }\n\n    render() {\n        const id = this.getId()\n        return (\n            <div>\n                <h2>FormEdit</h2>\n                {/* <h4>params id = {id}</h4> */}\n                {\n                this.state.fetched\n                ? <div>\n                    <h4>Data fetched loaded</h4>\n                    <div style={{color: 'red',}}\n                    >\n                        {this.state.errors}\n                    </div>\n                    <Form onSubmit={this.SubmitData}>\n                        <Input \n                            type='text' \n                            value={this.state.taskItem.text} \n                            onChange={this.InputEdit} \n                            placeholder='type task'\n                        />\n                        <label style={{marginLeft: 10, }}\n                        >done\n                            <input \n                                type='checkbox'\n                                checked={this.state.taskItem.done}\n                                onChange={this.CheckboxEdit}\n                                style={{marginLeft: 5, marginTop: 10,}}\n                            />                            \n                        </label>\n\n                        <Button>Save</Button>\n                    </Form>\n                </div>\n                : <div>\n                    <h4>Loading...</h4>\n                </div>\n                }\n                <br/>\n                <LinkStyled to='/'>ToDo List</LinkStyled>\n            </div>\n        )\n    }\n}\nexport default FormEdit","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nexport default class NotFound extends Component {\n    state = {\n        counter: 10,\n        interval: null,\n    }\n    countDown = () => {\n        console.log(this.state.counter)\n        this.setState({ counter: this.state.counter - 1 });\n    }\n    componentDidMount() {\n        const intervalId = setInterval(this.countDown, 1000)\n        this.setState({ interval: intervalId });\n    }\n    componentWillUnmount() {\n        'componentWillUnmount'\n        clearInterval(this.state.interval)\n    }\n    render() {\n\n        return (\n            <div>\n                <h2>Page - Not Found</h2>\n                <h4>Route match not found - {this.props.location.pathname} </h4>\n                <h4>Countdown to redirection: {this.state.counter} seconds</h4>\n                {this.state.counter < 0 && <Redirect to='/' />}\n                \n            </div>\n        )\n    }\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    text-align: left;\n    padding: 10px;\n    border: 1px blue dotted;\n    background-color: #ddd;\n\n    max-width: 600px;\n    margin: 10px auto 10px;\n    max-width: 500px;\n    background-color: #eee;\n    border-radius: 10px; \n`","import React, {Component} from \"react\";\nimport ToDoList from './container/ToDoList'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport FormEdit from './components/FormEdit/FormEdit'\nimport NotFound from './components/NotFound'\nimport {Container} from './App.css'\n\nconst App = () => {\n    console.log(process.env.REACT_APP_REST_API)\n    return (\n\n        <Router>\n          <Container>\n            <Switch>\n              {/* <Route exact path='/'><ToDoList /></Route> */}\n              <Route exact path='/app-list-todo-using-REST-API-in-react/' component={ToDoList} />\n\n              {/* nie ma props */}\n              {/* <Route path='/edit'><FormEdit /></Route> */}\n              {/* ma props  */}\n              <Route path='/app-list-todo-using-REST-API-in-react/edit/:id' component={FormEdit} />\n\n              {/* <Route><NotFound /></Route>               */}\n              <Route component={NotFound} />              \n            </Switch>\n          </Container>          \n        </Router>\n\n    );\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}